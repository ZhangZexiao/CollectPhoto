<?xml version="1.0" encoding="utf-8"?>
<root>
<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
<xsd:schema id="root" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
<xsd:element name="root" msdata:IsDataSet="true">
<xsd:complexType>
<xsd:choice maxOccurs="unbounded">
<xsd:element name="metadata">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="value" type="xsd:string" minOccurs="0" />
</xsd:sequence>
<xsd:attribute name="name" use="required" type="xsd:string" />
<xsd:attribute name="type" type="xsd:string" />
<xsd:attribute name="mimetype" type="xsd:string" />
<xsd:attribute ref="xml:space" />
</xsd:complexType>
</xsd:element>
<xsd:element name="assembly">
<xsd:complexType>
<xsd:attribute name="alias" type="xsd:string" />
<xsd:attribute name="name" type="xsd:string" />
</xsd:complexType>
</xsd:element>
<xsd:element name="data">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
</xsd:sequence>
<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
<xsd:attribute ref="xml:space" />
</xsd:complexType>
</xsd:element>
<xsd:element name="resheader">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
</xsd:sequence>
<xsd:attribute name="name" type="xsd:string" use="required" />
</xsd:complexType>
</xsd:element>
</xsd:choice>
</xsd:complexType>
</xsd:element>
</xsd:schema>
<data name="ColonCameraManufacturer" xml:space="preserve">
    <value>Camera Manufacturer:</value>
  </data>
<data name="ColonCameraModel" xml:space="preserve">
    <value>Camera Model:</value>
  </data>
<data name="ColonDateTaken" xml:space="preserve">
    <value>Date Taken:</value>
  </data>
<data name="ColonDestination" xml:space="preserve">
    <value>Destination: </value>
  </data>
<data name="ColonImagePropertyIds" xml:space="preserve">
    <value>Image property ids: </value>
  </data>
<data name="ColonMediaInformation" xml:space="preserve">
    <value>Media Information: </value>
  </data>
<data name="ColonSource" xml:space="preserve">
    <value>Source: </value>
  </data>
<data name="ComponentCameraManufacturer" xml:space="preserve">
    <value>{271:Camera Manufacturer}</value>
  </data>
<data name="ComponentCameraModel" xml:space="preserve">
    <value>{272:Camera Model}</value>
  </data>
<data name="ComponentCommand" xml:space="preserve">
    <value>{0:Command}</value>
  </data>
<data name="ComponentCommandDestinationRootDirectory" xml:space="preserve">
    <value>{2:Destination Root Directory}</value>
  </data>
<data name="ComponentCommandSourcePath" xml:space="preserve">
    <value>{1:Source Path}</value>
  </data>
<data name="ComponentDateCreatedDay" xml:space="preserve">
    <value>{-7:Date Created:dd}</value>
  </data>
<data name="ComponentDateCreatedHour" xml:space="preserve">
    <value>{-7:Date Created:HH}</value>
  </data>
<data name="ComponentDateCreatedLiteralDay" xml:space="preserve">
    <value>{-7:Date Created:dddd}</value>
  </data>
<data name="ComponentDateCreatedLiteralMonth" xml:space="preserve">
    <value>{-7:Date Created:MMMM}</value>
  </data>
<data name="ComponentDateCreatedMinute" xml:space="preserve">
    <value>{-7:Date Created:mm}</value>
  </data>
<data name="ComponentDateCreatedMonth" xml:space="preserve">
    <value>{-7:Date Created:MM}</value>
  </data>
<data name="ComponentDateCreatedSecond" xml:space="preserve">
    <value>{-7:Date Created:ss}</value>
  </data>
<data name="ComponentDateCreatedYear" xml:space="preserve">
    <value>{-7:Date Created:yyyy}</value>
  </data>
<data name="ComponentDateModifiedDay" xml:space="preserve">
    <value>{-6:Date Modified:dd}</value>
  </data>
<data name="ComponentDateModifiedHour" xml:space="preserve">
    <value>{-6:Date Modified:HH}</value>
  </data>
<data name="ComponentDateModifiedLiteralDay" xml:space="preserve">
    <value>{-6:Date Modified:dddd}</value>
  </data>
<data name="ComponentDateModifiedLiteralMonth" xml:space="preserve">
    <value>{-6:Date Modified:MMMM}</value>
  </data>
<data name="ComponentDateModifiedMinute" xml:space="preserve">
    <value>{-6:Date Modified:mm}</value>
  </data>
<data name="ComponentDateModifiedMonth" xml:space="preserve">
    <value>{-6:Date Modified:MM}</value>
  </data>
<data name="ComponentDateModifiedSecond" xml:space="preserve">
    <value>{-6:Date Modified:ss}</value>
  </data>
<data name="ComponentDateModifiedYear" xml:space="preserve">
    <value>{-6:Date Modified:yyyy}</value>
  </data>
<data name="ComponentDateTakenDay" xml:space="preserve">
    <value>{36867:Date Taken:dd}</value>
  </data>
<data name="ComponentDateTakenHour" xml:space="preserve">
    <value>{36867:Date Taken:HH}</value>
  </data>
<data name="ComponentDateTakenLiteralDay" xml:space="preserve">
    <value>{36867:Date Taken:dddd}</value>
  </data>
<data name="ComponentDateTakenLiteralMonth" xml:space="preserve">
    <value>{36867:Date Taken:MMMM}</value>
  </data>
<data name="ComponentDateTakenMinute" xml:space="preserve">
    <value>{36867:Date Taken:mm}</value>
  </data>
<data name="ComponentDateTakenMonth" xml:space="preserve">
    <value>{36867:Date Taken:MM}</value>
  </data>
<data name="ComponentDateTakenSecond" xml:space="preserve">
    <value>{36867:Date Taken:ss}</value>
  </data>
<data name="ComponentDateTakenYear" xml:space="preserve">
    <value>{36867:Date Taken:yyyy}</value>
  </data>
<data name="ComponentFileExtension" xml:space="preserve">
    <value>{-8:File Extension}</value>
  </data>
<data name="ComponentFileSize" xml:space="preserve">
    <value>{-1:File Size}</value>
  </data>
<data name="ComponentImageHeight" xml:space="preserve">
    <value>{-3:Image Height:100}</value>
  </data>
<data name="ComponentImageWidth" xml:space="preserve">
    <value>{-4:Image Width:100}</value>
  </data>
<data name="ComponentLatitudeLongitude" xml:space="preserve">
    <value>{-5:LatitudeLongitude}</value>
  </data>
<data name="ComponentOriginalFileName" xml:space="preserve">
    <value>{-2:Original File Name}</value>
  </data>
<data name="ConfigDestinationRootDirectory" xml:space="preserve">
    <value>DestinationRootDirectory</value>
  </data>
<data name="ConfigDestinationSubDirectories" xml:space="preserve">
    <value>DestinationSubDirectories</value>
  </data>
<data name="ConfigExcludeFileExtensions" xml:space="preserve">
    <value>ExcludeFileExtensions</value>
  </data>
<data name="ConfigFileNameComponent" xml:space="preserve">
    <value>FileNameComponent</value>
  </data>
<data name="ConfigImageFileExtensions" xml:space="preserve">
    <value>ImageFileExtensions</value>
  </data>
<data name="ConfigIncludeFileExtensions" xml:space="preserve">
    <value>IncludeFileExtensions</value>
  </data>
<data name="ConfigSearchDirectoriesBypassPatterns" xml:space="preserve">
    <value>SearchDirectoriesBypassPatterns</value>
  </data>
<data name="ConfigSourceDirectories" xml:space="preserve">
    <value>SourceDirectories</value>
  </data>
<data name="DirecotryLog" xml:space="preserve">
    <value>Log</value>
  </data>
<data name="DirectoryCollectPhotoData" xml:space="preserve">
    <value>CollectPhotoData</value>
  </data>
<data name="DirectoryConfig" xml:space="preserve">
    <value>Config</value>
  </data>
<data name="FileExtensionCollectPhotoData" xml:space="preserve">
    <value>.collectphotodata</value>
  </data>
<data name="FileExtensionConfig" xml:space="preserve">
    <value>.config</value>
  </data>
<data name="FileExtensionLog" xml:space="preserve">
    <value>.log</value>
  </data>
<data name="FormatByteToHex" xml:space="preserve">
    <value>X2</value>
  </data>
<data name="FormatDateTaken" xml:space="preserve">
    <value>yyyy:MM:dd HH:mm:ss</value>
  </data>
<data name="FormatIntToHex" xml:space="preserve">
    <value>X</value>
  </data>
<data name="FormatIntWithComma" xml:space="preserve">
    <value>N0</value>
  </data>
<data name="FormatTaggedDate" xml:space="preserve">
    <value>UTC yyyy-MM-dd HH:mm:ss</value>
  </data>
<data name="FormatTimeSpan" xml:space="preserve">
    <value>d'D'hh'H'mm'M'ss'S'</value>
  </data>
<data name="FormatTimeStamp" xml:space="preserve">
    <value>~MMMM dddd yyyy-MM-dd-HH-mm-ss</value>
  </data>
<data name="InfomationImageProperties" xml:space="preserve">
    <value>Image {0} does NOT contain property id#{1} and contains following property ids: {2}</value>
  </data>
<data name="InformationImageProperty" xml:space="preserve">
    <value>ID#: 0x{0}({1}), type: {2}, length: {3}, description: {4}, Value: {5}</value>
  </data>
<data name="InformationWorkerBytes" xml:space="preserve">
    <value>{0} bytes been copied, {1} bytes been skipped, {2} estimate rest bytes;</value>
  </data>
<data name="InformationWorkerFileOperation" xml:space="preserve">
    <value>Total {0} files, {1} been copied, {2} been skipped;</value>
  </data>
<data name="InformationWorkerTime" xml:space="preserve">
    <value>Background worker started at {0}, elapsed time {1}, estimate rest time {2};</value>
  </data>
<data name="LogFileCopiedDestinationPaths" xml:space="preserve">
    <value>Copied Destination Paths</value>
  </data>
<data name="LogFileCopiedSourcePaths" xml:space="preserve">
    <value>Copied Source Paths</value>
  </data>
<data name="LogFileExecuteCommandsResult" xml:space="preserve">
    <value>Execute Commands Result</value>
  </data>
<data name="LogFileToBeDeletedSourcePaths" xml:space="preserve">
    <value>Deleted Source Path And Destination Path Pairs</value>
  </data>
<data name="MarkerBackslash" xml:space="preserve">
    <value>\</value>
  </data>
<data name="MarkerColon" xml:space="preserve">
    <value>:</value>
  </data>
<data name="MarkerDash" xml:space="preserve">
    <value>-</value>
  </data>
<data name="MarkerDot" xml:space="preserve">
    <value>.</value>
  </data>
<data name="MarkerPlus" xml:space="preserve">
    <value>+</value>
  </data>
<data name="MarkerSemicolon" xml:space="preserve">
    <value>;</value>
  </data>
<data name="MarkerSlash" xml:space="preserve">
    <value>/</value>
  </data>
<data name="MarkerUnderscore" xml:space="preserve">
    <value>_</value>
  </data>
<data name="MarkerWhiteSpace" xml:space="preserve">
    <value> </value>
  </data>
<data name="ProgramName" xml:space="preserve">
    <value>CollectPhoto</value>
  </data>
<data name="ResultFileFilter" xml:space="preserve">
    <value>Filter Result</value>
  </data>
<data name="ResultFileSearch" xml:space="preserve">
    <value>Search Result</value>
  </data>
<data name="TextCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
<data name="TextDay" xml:space="preserve">
    <value>Day</value>
  </data>
<data name="TextDeleted" xml:space="preserve">
    <value>Deleted</value>
  </data>
<data name="TextExecute" xml:space="preserve">
    <value>Execute</value>
  </data>
<data name="TextFailedInDeleting" xml:space="preserve">
    <value>Failed in deleting</value>
  </data>
<data name="TextHour" xml:space="preserve">
    <value>Hour</value>
  </data>
<data name="TextLogFile" xml:space="preserve">
    <value>Log File</value>
  </data>
<data name="TextMinute" xml:space="preserve">
    <value>Minute</value>
  </data>
<data name="TextMonth" xml:space="preserve">
    <value>Month</value>
  </data>
<data name="TextSecond" xml:space="preserve">
    <value>Second</value>
  </data>
<data name="TextSourcePaths" xml:space="preserve">
    <value>Source Paths</value>
  </data>
<data name="TextTaggedDate" xml:space="preserve">
    <value>Tagged_Date</value>
  </data>
<data name="TextTaskParameters" xml:space="preserve">
    <value>Task Parameters</value>
  </data>
<data name="TextTips" xml:space="preserve">
    <value>Tips</value>
  </data>
<data name="TextUnknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
<data name="TextYear" xml:space="preserve">
    <value>Year</value>
  </data>
<data name="TryDeleting" xml:space="preserve">
    <value>Try Deleting</value>
  </data>
<resheader name="reader">
<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
</resheader>
<resheader name="resmimetype">
<value>text/microsoft-resx</value>
</resheader>
<resheader name="version">
<value>2.0</value>
</resheader>
<resheader name="writer">
<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
</resheader>
</root>
